{"version":3,"sources":["../../src/utils/copyFile.js"],"names":["source","target","Promise","resolve","reject","rd","on","err","Error","message","wr","pipe"],"mappings":";;;;;;AAAA;;AACA;;AACA;;;;;;kBAEe,CAACA,MAAD,EAASC,MAAT,KACb,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/B,wBAAO,mBAAQH,MAAR,CAAP,EAAwB,MAAM;AAC5B,QAAII,KAAK,0BAAiBL,MAAjB,CAAT;AACAK,OAAGC,EAAH,CAAM,OAAN,EAAeC,OAAOH,OAAO,IAAII,KAAJ,CAAW,wBAAuBR,MAAO,MAAKO,IAAIE,OAAQ,EAA1D,CAAP,CAAtB;AACA,QAAIC,KAAK,2BAAkBT,MAAlB,CAAT;AACAS,OAAGJ,EAAH,CAAM,OAAN,EAAeC,OAAOH,OAAO,IAAII,KAAJ,CAAW,yBAAwBP,MAAO,MAAKM,IAAIE,OAAQ,EAA3D,CAAP,CAAtB;AACAC,OAAGJ,EAAH,CAAM,QAAN,EAAgBH,OAAhB;AACAO,OAAGJ,EAAH,CAAM,KAAN,EAAaH,OAAb;AACAO,OAAGJ,EAAH,CAAM,OAAN,EAAeH,OAAf;AACAE,OAAGM,IAAH,CAAQD,EAAR;AACD,GATD;AAUD,CAXD,C","file":"copyFile.js","sourcesContent":["import { createReadStream, createWriteStream } from 'fs';\nimport { dirname } from 'path';\nimport mkdirp from 'mkdirp';\n\nexport default (source, target) => (\n  new Promise((resolve, reject) => {\n    mkdirp(dirname(target), () => {\n      let rd = createReadStream(source);\n      rd.on('error', err => reject(new Error(`failed to read file \"${source}\": ${err.message}`)));\n      let wr = createWriteStream(target);\n      wr.on('error', err => reject(new Error(`failed to write file \"${target}\": ${err.message}`)));\n      wr.on('finish', resolve);\n      wr.on('end', resolve);\n      wr.on('close', resolve);\n      rd.pipe(wr);\n    });\n  })\n);\n"]}